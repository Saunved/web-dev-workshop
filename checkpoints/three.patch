diff --git a/backend/controllers/user.js b/backend/controllers/user.js
index c94b4ab..bcc0ee2 100644
--- a/backend/controllers/user.js
+++ b/backend/controllers/user.js
@@ -46,17 +46,14 @@ module.exports.createUser = async (req, res) => {
 
     req.body.password = hash;
     // Add user to User model
-    const user = await User.create(req.body);
+    // Task 2: We need to store the user in the database. Use sequelize to do this!
+    // Check out the other controllers to get an idea for how this could be done.
+
+    // Task 3A: What should we send back? Remember to wrap your data in a "data" key for consistency
 
-    return res.status(201).json({
-      data: { user: { id: user.id } },
-      message: "User created."
-    });
   } catch (err) {
     console.error(err);
-    return res.status(500).json({
-      message: "Error while creating user."
-    });
+// Task 3B: If something goes wrong, we "catch" it here. What should we send back to the frontend?
   }
 };
 
diff --git a/backend/routes/user.js b/backend/routes/user.js
index cc9fc89..38f56be 100644
--- a/backend/routes/user.js
+++ b/backend/routes/user.js
@@ -17,7 +17,7 @@ router.get("/user/:id", getUser);
 router.get("/user", getUser);
 router.get("/user/handle/:handle", getUserByHandle);
 router.get("/users", getAllUsers);
-router.post("/user", createUser);
+// Task 1: Create a POST route that would invoke createUser
 router.put("/user", auth, updateUser);
 router.put("/user/change-password", auth, changePassword);
 router.post("/logout", auth, logoutUser);
