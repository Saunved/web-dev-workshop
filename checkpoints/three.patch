diff --git a/backend/controllers/user.js b/backend/controllers/user.js
index bed3da2..14f8499 100644
--- a/backend/controllers/user.js
+++ b/backend/controllers/user.js
@@ -67,17 +67,14 @@ module.exports.createUser = async (req, res) => {
 
     req.body.password = hash;
     // Add user to User model
-    const user = await User.create(req.body);
+    // Task 2: We need to store the user in the database. Use sequelize to do this!
+    // Check out the other controllers to get an idea for how this could be done.
+
+    // Task 3A: What should we send back? Remember to wrap your data in a "data" key for consistency
 
-    return res.status(201).json({
-      data: { user: { id: user.id } },
-      message: "User created."
-    });
   } catch (err) {
     console.error(err);
-    return res.status(500).json({
-      message: "Error while creating user."
-    });
+// Task 3B: If something goes wrong, we "catch" it here. What should we send back to the frontend?
   }
 };
 
diff --git a/backend/routes/user.js b/backend/routes/user.js
index be467d3..27b6b37 100644
--- a/backend/routes/user.js
+++ b/backend/routes/user.js
@@ -14,11 +14,12 @@ const {
 const { auth } = require("./../middlewares/auth");
 
 router.post("/login", loginUser);
-router.post("/user", createUser);
-router.get("/users", auth, getAllUsers);
-router.get("/user", auth, getUser);
-router.get("/user/:id", auth, getUser);
+router.get("/user/:id", getUser);
+router.get("/user", getUser);
 router.get("/user/handle/:handle", getUserByHandle);
+router.get("/users", getAllUsers);
+// Task 1: Create a POST route that would invoke createUser
+
 router.put("/user", auth, updateUser);
 router.put("/user/change-password", auth, changePassword);
 router.post("/logout", auth, logoutUser);
