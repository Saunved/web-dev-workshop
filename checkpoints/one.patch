diff --git a/frontend/src/pages/auth/register.jsx b/frontend/src/pages/auth/register.jsx
index cb42187..1ea01e6 100644
--- a/frontend/src/pages/auth/register.jsx
+++ b/frontend/src/pages/auth/register.jsx
@@ -13,8 +13,6 @@ export default function RegisterFlow() {
 
   const [name, setName] = useState("");
   const [email, setEmail] = useState("");
-  const [password, setPassword] = useState("");
-  const [handle, setHandle] = useState("");
 
   // @TODO: Show validation errors for these fields
   const [emailError, setEmailError] = useState("");
@@ -35,9 +33,7 @@ export default function RegisterFlow() {
       },
       body: JSON.stringify({
         name,
-        handle,
         email,
-        password,
       }),
     })
       .then((response) => {
@@ -58,13 +54,7 @@ export default function RegisterFlow() {
 
   return (
     <div className="max-w-3xl py-8 bg-white rounded-md w-full my-12 mx-auto border shadow">
-      <div className="flex justify-center mb-4">
-        <Dog
-          weight="fill"
-          className="text-purple-700 hover:rotate-180 hover:transform duration-100"
-          size={80}
-        ></Dog>
-      </div>
+      {/* Task 3: Use the imported "Dog" icon from Phosphor Icons to ensure that our branding is on-point */}
       <h1 className="text-center text-3xl font-semibold">
         {uiText.registerCta}
       </h1>
@@ -93,35 +83,15 @@ export default function RegisterFlow() {
                 required
               />
             </div>
-            <div>
-              <label htmlFor="password">{uiText.password}</label>
-              <input
-                type="password"
-                id="password"
-                name="password"
-                value={password}
-                onChange={(event) => setPassword(event.target.value)}
-                required
-              />
-            </div>
-            <div>
-              <label htmlFor="handle">{uiText.handle}</label>
-              <input
-                type="text"
-                id="handle"
-                name="handle"
-                value={handle}
-                onChange={(event) => setHandle(event.target.value)}
-                required
-              />
-            </div>
+
+            {/* Task 1: We need to accept and store the password and handle fields in the appropriate variables.
+            Check how name and email are currently being done.
+            Bonus: The registration button should be disabled if password and handle are not present
+            */}
 
             <div className="mt-6">
-              <button
-                type="submit"
-                disabled={!email || !name || !password || !handle}
-                className="px-4 w-full border rounded-full py-2 bg-blue-600 text-white disabled:opacity-60"
-              >
+              {/* Task 2: This button looks horrible. Let's style it with Tailwind classes! */}
+              <button type="submit" disabled={!email || !name} className="">
                 {uiText.register}
               </button>
             </div>
